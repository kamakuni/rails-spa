#upstream unicorn {
#    server unix://app/tmp/sockets/puma.sock fail_timeout=0;
#}

upstream rails_api {
    server api:3000;
}

server {
    listen 443 ssl;
    root /usr/share/nginx/html;
    index index.html;
    server_name localhost;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ssl_certificate /etc/certs/localhost.pem;
    ssl_certificate_key /etc/certs/localhost-key.pem;

    location / {
        # config for CORS.
        add_header Access-Control-Allow-Origin 'http://localhost:3001' always;
        add_header Access-Control-Allow-Methods 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
        add_header Access-Control-Allow-Credentials true always;

        # config for preflight request.
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin 'http://localhost:3001' always;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Max-Age 7200;
        
            add_header Content-Type 'text/plain charset=UTF-8';
            add_header Content-Length 0;

            return 204;
        }
        # for cookie attributes
        #proxy_cookie_path / "/; secure; HttpOnly; SameSite=None";
        # config for reverse proxy
        proxy_redirect off;
       
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        
        # config for Set-Cookie with proxy
        proxy_set_header X-Forwarded-Proto https;
        
        proxy_pass 'http://rails_api';
    }
}